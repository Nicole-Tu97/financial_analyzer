:py:mod:`financial_analyzer.plot_breakeven_point`
=================================================

.. py:module:: financial_analyzer.plot_breakeven_point


Module Contents
---------------


Functions
~~~~~~~~~

.. autoapisummary::

   financial_analyzer.plot_breakeven_point.plot_breakeven_point



.. py:function:: plot_breakeven_point(fixed_costs, sales_price_per_unit, variable_cost_per_unit, max_units)

   Plot a break-even point graph which shows the relationship between total cost,
   total revenue, and number of units sold. This plot will include 3 lines, one for
   Total Revenue, one for Total Cost (Varialbe + Fixed), and one for Fixed Cost.

   :param fixed_costs: Total fixed costs in the problem, given as a float.
   :type fixed_costs: float
   :param sales_price_per_unit: The selling price of each unit in the problem, given as a float.
   :type sales_price_per_unit: float
   :param variable_cost_per_unit: The variable cost of each unit in the problem, given as a float.
   :type variable_cost_per_unit: float
   :param max_units: The maximum number of units to include in the plot, given as an integer.
   :type max_units: int

   :returns: This function does not return a value. It displays a plot.
   :rtype: None

   .. rubric:: Examples

   Context: Want to visualize cafe sales. Your fixed costs are $1,000, each coffee
   sells for $5, the variable cost for each cup is $2. To visualize (altair plot)
   your costs and revenue up to selling 500 cups, you use this function.

   >>> fixed_costs = 1000
   >>> sales_price_per_unit = 5
   >>> variable_cost_per_unit = 2
   >>> max_units = 500
   >>> plot_breakeven_point(fixed_costs, sales_price_per_unit, variable_cost_per_unit, max_units)

   This will display an altair plot with the total cost, fixed cost, and total revenue lines,
   illustrating the point where they intersect as the break-even point.


